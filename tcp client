use std::io::{self, prelude::*, BufReader, Write};
use std::net::TcpStream;
use std::str;

fn main() -> std::io::Result<()> {
    let mut stream = TcpStream::connect("127.0.0.1:8080")?;//连接server
    for _ in 0..10 {     
        let mut input = String::new();//创建一个新的字符串
        io::stdin()//输入句柄
            .read_line(&mut input)//从input里读取输入的一行内容
            .expect("Failed to read from stdin");//返回读取错误说明
        stream
            .write(input.as_bytes())//将input的内容写入流
            .expect("Failed to write to stream");//返回写入流错误提示
        
        let mut reader = BufReader::new(&stream);//读取buffer的内容
        let mut buffer: Vec<u8> = Vec::new();//类型转换
        reader
            .read_until(b'\n', &mut buffer)//读取内容
            .expect("Could not read into buffer");
        println!("{}", 
            str::from_utf8(&buffer).expect("Could not write buffer as string"));//打印内容
        println!("");//打印空格
    }
    Ok(())
}
